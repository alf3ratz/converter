# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Ls
      run: sudo ls -la
    - name: Ls ..
      run: ls -la ..
    - name: Ls ../..
      run: ls -la ../..
    - name: Pwd
      run: pwd
    - uses: actions/checkout@v2
    - uses: gradle/wrapper-validation-action@v1
    - name: 'Setup Java'
      uses: actions/setup-java@v1
      with: 
        java-version: 11
#     - name: 'gradle init'
#       run: gradle init
#     - name: 'gradle wrapper'
#       run: gradle wrapper --gradle-version 7.4
    - name: 'Add gradlew'
      run: chmod +x gradlew
    - name: build
      run: ./gradlew build
#     - name: init
#       run: ./gradlew init
    - name: Gen .jar
      run: ./gradlew assemble
#     - name: Validate Gradle wrapper
#       uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
#     - name: Build with Gradle
#       uses: gradle/gradle-build-action@937999e9cc2425eddc7fd62d1053baf041147db7
#       with:
#         arguments: build
#     - uses: actions/upload-artifact@v2
#       with:
#         name: Package
#         path: build/libs
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ${{ github.ref }} Release
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./build/libs/converter-1.0-SNAPSHOT.jar
        asset_name: converter.jar
        asset_content_type: application/jar
